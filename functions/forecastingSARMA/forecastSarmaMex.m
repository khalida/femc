%% SARMA forecast using method described by Sevlian et al in:
% "Short term electricity load forecasting on varying levels of
% aggregation", equation (7), version from Arxiv, December 2014.

function forecast = forecastSarmaMex(demand, thetaValues, phiValues, ...
    k) %#codegen

% Assert input types
assert(all(size(demand) == [k 1]));

% Pre-allocate output forecast
forecast = zeros(size(demand), 'like', demand);

for thisK = 1:k;
    if(thisK<=1)
        forecast(thisK) =  thetaValues(1)*demand(end + thisK - 1) + ...
            thetaValues(2)*demand(end + thisK - 2) + ...
            thetaValues(3)*demand(end + thisK - 3) + ...
            phiValues*demand(end + thisK - k);
        
    elseif(thisK<=2)
        forecast(thisK) =  thetaValues(1)*forecast(thisK - 1) + ...
            thetaValues(2)*demand(end + thisK - 2) + ...
            thetaValues(3)*demand(end + thisK - 3) + ...
            phiValues*demand(end + thisK - k);
        
    elseif(thisK<=3)
        forecast(thisK) =  thetaValues(1)*forecast(thisK - 1) + ...
            thetaValues(2)*forecast(thisK - 2) + ...
            thetaValues(3)*demand(end + thisK - 3) + ...
            phiValues*demand(end + thisK - k);
        
    elseif(thisK<=k)
        forecast(thisK) =  thetaValues(1)*forecast(thisK - 1) + ...
            thetaValues(2)*forecast(thisK - 2) + ...
            thetaValues(3)*forecast(thisK - 3) + ...
            phiValues*demand(end + thisK - k);
        
    else
        forecast(thisK) =  thetaValues(1)*forecast(thisK - 1) + ...
            thetaValues(2)*forecast(thisK - 2) + ...
            thetaValues(3)*forecast(thisK - 3) + ...
            phiValues*forecast(thisK - k);
    end
end

end
